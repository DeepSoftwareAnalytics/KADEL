{"javascript": {"0": {"0": "Fix broken links to Cypress API documentation", "1": "Update Cypress documentation links in the template files and spec_helper.js."}, "0": {"0": "Fix broken links to Cypress API documentation", "1": "Update Cypress documentation links in the template files and spec_helper.js."}, "1": {"0": "Refactor markdown preview CSS", "1": "Refactor markdown preview CSS to update background color and add box-shadow."}, "2": {"0": "feat: Add support for showing info messages to the user", "1": "Refactor code to use the \"core\" object instead of the \"bus\" object for emitting events and adding files, and update references in the Dashboard"}, "3": {"0": "Refactor IAM permissions for AWS Lambda and S3 resources", "1": "Refactor IAM policies to use Fn::Join for constructing the ARN for log groups, using AWS::Region and AWS::AccountId."}, "4": {"0": "Add Gemfile for Jekyll and Kramdown dependencies", "1": "Add Gemfile with dependencies for Jekyll and Kramdown libraries."}, "5": {"0": "refactor: rename fetchedAt to fetchTime in Lighthouse Result object", "1": "Update \"fetchedAt\" to \"fetchTime\" in Lighthouse Result object."}, "6": {"0": "docs: update image alignment documentation, fix broken links\n\nThis commit updates the documentation for aligning images, specifically fixing broken links to helper float classes and text alignment classes. It also clarifies how to center block-level images using the `.mx-auto` margin utility class.\n\ndocs: fix broken link in options documentation\n\nThis commit fixes a broken link in the options documentation. The link to generate spacer utilities now correctly points to the [spacer utilities](https://docs.dev/examples/) page.\n\ndocs: update migration guide for v4\n\nThis commit updates the migration guide for version 4, specifically noting that panels, thumbnails, and wells have been dropped in favor of the new all-encompassing component, cards. It also mentions the removal of the Glyphicons icon font and suggests alternative options for icons.", "1": "Fix broken link to cards component in migration.md file."}, "7": {"0": "Fix ref type declaration in ComponentElement interface", "1": "Fix optional ref type in preact component declaration."}, "8": {"0": "\"Fix Navigator.js spring and interaction handle management\"", "1": "Update Navigator component to use \"destroy\" method for spring and handle interaction handle."}, "9": {"0": "Update meteor-babel npm package to version 7.5.5", "1": "Update meteor-babel npm package to version 7.5.5."}, "10": {"0": "Refactor font translation code and fix deprecated handling for standard fonts", "1": "Update translateFont method to handle deprecated special treatment for standard fonts."}, "11": {"0": "Refactor select queries in schema.select.test.js", "1": "Fix issue with chained promises in schema select test."}, "12": {"0": "docs(guide): Add documentation for decorators in AngularJS", "1": "Added decorators section to the AngularJS documentation guide."}, "13": {"0": "Add section on writing Typescript libraries instead of apps", "1": "Add section on writing TypeScript libraries instead of apps."}, "14": {"0": "feat(loader): Add support for custom headers in XHR requests", "1": "Set XHR request headers to undefined by default."}, "15": {"0": "Disable 'react/no-array-index-key' rule and add backers\n", "1": "Turn off the 'react/no-array-index-key' rule in the '.eslintrc.js' configuration file."}, "16": {"0": "Update dependencies for Travis CI build and add support for HTTP 202 response code", "1": "Specify `allow 202` option in awesome_bot command for travis build."}, "17": {"0": "chore: Remove unnecessary whitespace in Home.module.css", "1": "Refactor flex-wrap property in Home.module.css to improve code readability and maintainability."}, "18": {"0": "feat: Add clampNumber function to snippets\n\nThis commit adds a new function called `clampNumber` to the snippets directory. This function allows you to limit a number to a given range. The function takes three parameters: `num`, `lower`, and `upper`. It returns `num` if it falls within the range defined by `lower` and `upper`, otherwise it returns the closest limit (`lower` or `upper`) based on the value of `num`.", "1": "Refactor clampNumber function to remove unnecessary blank line."}, "19": {"0": "feat: Update eslint-plugin-react-hooks to version 2.5.1", "1": "Update eslint-plugin-react-hooks to version 2.5.1."}, "20": {"0": "feat(ember-glimmer): Improve {{#with}} syntax test cases\n\n- Refactored the test case for `{{#with}}` to use the new `RenderingTest` helper.\n- Added test cases for `{{#", "1": "Add tests for `{{#with}}` and `{{#with as}}` syntax in `ember-glimmer/tests/integration/syntax/with"}, "21": {"0": "\"Update performance setup files\"", "1": "Update benchmark setup files."}, "22": {"0": "Updated Hammer.js version to v1.0.6dev - 2013-09-15", "1": "Fix userDrag option in hammer.js."}, "23": {"0": "Refactor session middleware hook in router index.js", "1": "Refactor session loading to skip if \"nosession\" header is set."}, "24": {"0": "docs: update dependency finalhandler to version 0.3.6", "1": "Update finalhandler dependency to version 0.3.6."}, "25": {"0": "Update version in UPGRADE_GUIDE.md to 0.5.x", "1": "Update route version from 0.4.x to 0.5.x in UPGRADE_GUIDE.md."}, "26": {"0": "Improve props naming convention in React components", "1": "\"Update README.md to include guidelines for props naming in React components.\""}, "27": {"0": "refactor(Blaze): Refactor _DOMMaterializer to use new materializeDOM function", "1": "Refactor Blaze._DOMMaterializer to use Blaze._materializeDOM and simplify code structure."}, "28": {"0": "Adds Alt+Shift+T keyboard shortcut to edit tooltips, minor improvements for Gliffy import, and updates version to 8.4.1", "1": "Adds Alt+Shift+T keyboard shortcut to edit tooltips and makes minor improvements for Gliffy import."}, "29": {"0": "refactor: Add error handling for unhandled promises\n\nThis commit adds a new file `errors.js` in the `lib/common` directory, which sets up error handling for unhandled promises. It requires the `pretty-error` package and configures it to skip certain packages and node files. It also uses the `process.on('unhandledRejection')` event to log any unhandled promise rejections using the `pretty-error` rendering.", "1": "Add pretty-error package for better error handling and display."}, "30": {"0": "Upgrade `update-check` dependency to version 1.5.4", "1": "Update \"update-check\" dependency to version 1.5.4."}, "31": {"0": "Add tsconfig.json and uppy-tests.ts to package types.", "1": "Add TypeScript configuration and Uppy tests for Uppy package."}, "32": {"0": "feat: update options in ngOptions directive\n\nThis commit updates the options in the ngOptions directive in order to reflect changes in the DOM.", "1": "Refactor ngOptionsSpec.js test file to update options in the DOM."}, "33": {"0": "Add Fishing TV and Hallypop channels to kr.m3u\n\n", "1": "Add Fishing TV and Hallypop channels to the Korean channel list."}, "34": {"0": "docs(gatsby-link): Update link to API reference documentation", "1": "Fix link to API reference in README.md"}, "35": {"0": "Refactor touchTapCloseDelay logic in IconMenu.jsx", "1": "Add touchTapCloseDelay prop to IconMenu component."}, "36": {"0": "Upgrade tree-view package to version 0.92.0", "1": "Update \"tree-view\" dependency to version 0.92.0."}, "37": {"0": "chore: Refactor Render Definition\n\nRefactors the `RenderDefinition` class in the `ember-glimmer` package by removing the unused `env` parameter.", "1": "Refactor render managers in ember-glimmer/lib/component-managers/abstract.ts, ember-glimmer/lib/component-managers/curly.ts, ember-glimmer/lib/component-managers/mount.ts, ember-glimmer/lib/component-managers/render.ts, ember-glimmer/lib/syntax/render.ts."}, "38": {"0": "\"Remove colour select component from Home.js\"", "1": "Remove \"Colours\" section and related code in the `Home.js` file."}, "39": {"0": "Lazy initialize DraweeControllerBuilder in ReactImageManager#createViewInstance()\n\nThis change lazily initializes the DraweeControllerBuilder in the `createViewInstance` method of the `ReactImageManager` class. If the `mDraweeControllerBuilder` is null, it will now be initialized with `Fresco.newDraweeControllerBuilder()`. This ensures that the initialization of the DraweeControllerBuilder is delayed until it is needed, and is in line with the initialization in the default constructor.", "1": "Lazy initialize DraweeControllerBuilder in ReactImageManager."}, "40": {"0": "Refactored event handling logic with immutable callback list", "1": "Refactor event handling logic in Backbone.js to improve readability and performance."}, "41": {"0": "Fixing bug in ClearbitDataSource to handle missing person object", "1": "Fix bug in ClearbitDataSource when person is not found in cache."}, "42": {"0": "chore(deps): update glimmer/compiler to version 0.45.0", "1": "Update dependencies to latest version of @glimmer/compiler, @glimmer/interfaces, @glimmer/node, @glimmer/opcode"}, "43": {"0": "Refactor hierarchy.revalue to handle cases where node.children is null", "1": "Refactor hierarchy.revalue in d3.js to improve code readibility and maintainability."}, "44": {"0": "Add trap for \"toJSON\" property in computed property", "1": "Add \"toJSON\" trap to computed property to ensure proper serialization."}, "45": {"0": "refactor: updated method in ThemeManager to apply user stylesheet with a generic name", "1": "Refactor ThemeManager to apply user stylesheet using 'user' identifier instead of 'userTheme'."}, "46": {"0": "Scroll into view after setting selection in FindReplace.js", "1": "Fix: Scroll the editor to show the match when performing find and replace."}, "47": {"0": "chore: Update sendNotificationsOnMessage.js and RocketletWebsocketReceiver\n\nfeat: Add command/removed event listener to RocketletWebsocketReceiver", "1": "Fix bug in sendNotificationsOnMessage where message.attachments may not be an array leading to an error, and add event listener for command/removed in RocketletWebsocketReceiver."}, "48": {"0": "fix Indonesian language test case errors and update week configuration", "1": "Refactor Indonesian translation and fix the week start day."}, "49": {"0": "fix: restore placeholder text in dropdown module and align menu item text left", "1": "Fix placeholder text not being restored correctly in dropdown module and align menu item text to the left."}}, "csharp": {"0": {"0": "Normalize Task types in TypeSymbolExtensions and fix issues with pointers\n\n- Normalize Task types in TypeSymbolExtensions method NormalizeTaskTypesInType to properly handle NamedTypeSymbol and ErrorTypeSymbol. Also handle PointerTypeSymbol.\n- Added", "1": "Normalize task types in type symbols, including named types, error types, and pointer types."}, "0": {"0": "Normalize Task types in TypeSymbolExtensions and fix issues with pointers\n\n- Normalize Task types in TypeSymbolExtensions method NormalizeTaskTypesInType to properly handle NamedTypeSymbol and ErrorTypeSymbol. Also handle PointerTypeSymbol.\n- Added", "1": "Normalize task types in type symbols, including named types, error types, and pointer types."}, "1": {"0": "Refactor PictureBox rendering in ThemeWin32Classic.cs\n\n- Fixes an issue where PictureBox would crash when drawing a null image\n- Reorganizes code for better readability and maintainability", "1": "Fix null image crash in PictureBox drawing."}, "2": {"0": "Update Mono NUnit version to use the 4.5 framework", "1": "Update version of NUnit in mono-nunit.pc.in file to use mono/4.5 directory."}, "3": {"0": "Refactoring ViewDataDictionary in HtmlHelper.cs and adding PartialModel.cshtml and PartialChildModel.cshtml templates", "1": "Refactor HtmlHelper.cs and add PartialModel.cshtml and PartialChildModel.cshtml views to support rendering of partial views with a model."}, "4": {"0": "Fix invalid method calls and add additional test cases in ActivatorTests.cs", "1": "Refactor ActivatorTests.cs to include additional test cases and improve code coverage."}, "5": {"0": "Refactored GetResponseInfo methods for HttpClientManager.cs and added ContentLength property to HttpResponseInfo class", "1": "Refactored code to use a helper method for creating the HttpResponseInfo object."}, "6": {"0": "[build] Add step to make version before running tests", "1": "Add make version script to the after_test commands in appveyor.yml."}, "7": {"0": "Added ButtonTagHelper and SubmitTagHelper", "1": "Add ButtonTagHelper and SubmitTagHelper to handle <button> and <input type=\"submit\"> elements."}, "8": {"0": "Updated dependencies to version 3.1.1-servicing.19576.10", "1": "Update NuGet package sources and dependency versions."}, "9": {"0": "Fix issue with enumerating a null IEnumerable", "1": "Fix issue with enumerating a query created from a null IEnumerable."}, "10": {"0": "Add serialization test for ValueTuple", "1": "Add serialization test for ValueTuple class."}, "11": {"0": "Updated Lucene.Net packages to version 4.8.0-beta00009", "1": "Update Lucene.Net package versions to 4.8.0-beta00009."}, "12": {"0": "Update Connect entry point timer interval to 1 hour", "1": "Update timer interval for ConnectEntryPoint."}, "13": {"0": "Refactored code to initialize root node of treeview control in XmlConnectionsLoader.cs", "1": "Refactor initialization of the treeview control in XmlConnectionsLoader.cs."}, "14": {"0": "Add Smudge Types and replace RA mouse.shp, nopower.shp with Dune 2000 equivalent", "1": "Add Smudge Types, replace RA mouse.shp and nopower.shp with Dune 2000 equivalent, and update UI buttons in"}, "15": {"0": "Add pe header machine field verification and size verification in metadata-verify.c", "1": "Add pe header machine field verification to metadata-verify.c."}, "16": {"0": "Changed sgen test command to use hyphen instead of underscore in the Makefile", "1": "Refactor 'test_sgen' to 'test-sgen' in the Makefile.am file."}, "17": {"0": "Fix issue with error handling when response is not a successful HTTP response.", "1": "Add type guard to check if the error object is an instance of HttpErrorResponse."}, "18": {"0": "Ensure main thread is non-null before dereferencing it in mono_thread_exit() function", "1": "Fix issue where a null reference exception could occur when exiting the main thread."}, "19": {"0": "Refactor GetDirectories method in DirectoryInfo.cs to remove unnecessary code block", "1": "Refactor GetDirectories method in DirectoryInfo.cs to remove unnecessary closing brace."}, "20": {"0": "Refactor methods in NativeReader.cs to include parameter descriptions\n\nCo-authored-by: John Doe <johndoe@example.com>", "1": "Refactor NativeReader methods to include parameter documentation and update the remarks section."}, "21": {"0": "Update version to 2.41", "1": "Update version numbers in SimpleExt.rc to 2.41."}, "22": {"0": "Add more dynamic binary expressions", "1": "Add more dynamic binary expressions in expression.cs and ecore.cs."}, "23": {"0": "Fix binding in Index.razor form", "1": "Refactor data binding syntax in Index.razor."}, "24": {"0": "Add instructions for setting up Visual Studio 2015 CTP5", "1": "Update README.md with installation instructions for Visual Studio 2015 Preview and Visual Studio 2015 CTP5."}, "25": {"0": "Refactor PatchManager and PatchProcessor to use constructor injection\n\nInstead of creating a new instance of PatchProcessor in the PatchManager class, this change modifies the LoadPatch method to accept an instance of PatchProcessor, allowing for better testability and separation of concerns. The PatchProcessor class is also updated to remove the FilesContentEncoding property and instead pass encoding as a parameter in the CreatePatchesFromString and CreatePatchFromString methods.", "1": "Change PatchProcessor constructor to take filesContentEncoding as a parameter and use it in CreatePatchesFromString method."}, "26": {"0": "Added implementation for the `ICastable` interface and related classes and tests", "1": "Add ICastable implementation and related classes for testing interoperability."}, "27": {"0": "Add NuGetAdditionalFiles/RunCsc and NuGetAdditionalFiles/RunVbc to be cloned with LF in .gitattributes", "1": "Improve NuGet cache reliability and fix potential null reference exception in C# member semantic model."}, "28": {"0": "Add new Makefile and test files for Martin's work", "1": "Add Makefile, known-issues file, and two test code files."}, "29": {"0": "Refactored SocketAsyncResult constructor to remove unused variable and align code formatting.", "1": "Remove unused variable in SocketAsyncResult constructor."}, "30": {"0": "Add Size property to GcInfo class and display raw bytes for UnwindInfo and GcInfo", "1": "Fix calculation of `Size` property in `GcInfo` class and add option to dump raw bytes for `UnwindInfo` and `GcInfo`."}, "31": {"0": "[Http] Support decoding UTF-8 in Location header\n\n- Added a method `TryDecodeUtf8` in `HeaderDescriptor.cs` to decode UTF-8 encoded Location header values.\n- Added a new test `SocketsHttpHandlerTest_LocationHeader` in `SocketsHttpHandlerTest.cs` to verify that UTF-8 encoded Location header values are correctly decoded.\n\nFixes #9874", "1": "Added support for decoding UTF-8 Location headers in the `HeaderDescriptor` class and added a test case in the`SocketsHttpHandlerTest_LocationHeader` class to verify the decoding functionality."}, "32": {"0": "Update build.sh script to support clang-4.0 for cross compilation", "1": "Update build script to support cross compilation with Clang 4.0 as well as Clang 3.9."}, "33": {"0": "Added RouteInferenceStrategies.cs", "1": "Added route inference strategies for REST paths based on request type attributes and property names."}, "34": {"0": "Decrypt methods and resources in FileDecrypter", "1": "Refactor FileDecrypter to improve readability and fix decryption logic."}, "35": {"0": "Change author name to ardalis in multiple files", "1": "Change author name from \"rick-anderson\" to \"ardalis\" in multiple files."}, "36": {"0": "Refactor using Microsoft.Extensions.Hosting", "1": "Refactor using statements in Program.cs for improved readability."}, "37": {"0": "Refactor CalculateJpegChannelSize method to return an array of sizes", "1": "Refactor the `CalculateJpegChannelSize` method in `ComponentUtils.cs` to return an array of sizes, and update all related references in the code and tests."}, "38": {"0": "Fix issue with pointer element access not being identified as non-moveable variable", "1": "Fix issue where C# would reject expressions such as `public int* M => &this.Bar[0];` if `Bar` is a fixed field of the containing type."}, "39": {"0": "Add keyword filter to replace spaces with dots in extratorrent-cd.yaml", "1": "Add keyword filter for replacing whitespace with period in Extratorrent-CD search."}, "40": {"0": "Refactor package names to WebApplicationBasic", "1": "Update project names in package.json files."}, "41": {"0": "Fix warnings related to unsupported functions in the security.c file", "1": "Remove unneeded disclaimers in `security.c` file."}, "42": {"0": "Remove XenoCode user assembly attributes", "1": "Fix issue with Xenocode attribute removal in the Deobfuscator class."}, "43": {"0": "Added ResponseRedirectionFacts.js to test the behavior of response redirections.", "1": "Add functional tests for response redirection in the SignalR JavaScript client."}, "44": {"0": "fix: Update package name in deprecation message", "1": "Refactored the deprecation notice in ChocolateyVersionCommand.cs to use the correct package name."}, "45": {"0": "Add startvs.cmd script for JSInterop project", "1": "Add startvs.cmd script for running JSInterop solution."}, "46": {"0": "Refactor script initializer to use the correct BoundPreviousSubmissionReference constructor", "1": "Refactor initialization of script classes and fix entry point detection."}, "47": {"0": "Refactored error handling and added instructions for reporting bugs and providing necessary files", "1": "Refactor error message in Program.cs to include request for original files in bug reports."}, "48": {"0": "Add test case for SubjectAltName extension in AsnEncodedDataTest.cs", "1": "Added test case for SubjectAltName extension in AsnEncodedDataTest.cs."}, "49": {"0": "Change: \n\nUpdate usage of MetadataVersion enum to RuntimeVersion enum in RootContext class\n\nCommit message: \n\nUpdate usage of MetadataVersion enum to RuntimeVersion enum", "1": "Refactor conditional statements to check for language version instead of metadata compatibility version."}}, "cpp": {"0": {"0": "Refactor CpuTransferManager to use a generic transfer method", "1": "Implement generic transfer of data to Infeed in the cpp repository."}, "0": {"0": "Refactor CpuTransferManager to use a generic transfer method", "1": "Implement generic transfer of data to Infeed in the cpp repository."}, "1": {"0": "Added /apollo/prediction to the perfect_control_topic list in filter_planning.sh", "1": "Add '/apollo/prediction' topic to perfect control dependencies list in filter_planning.sh script."}, "2": {"0": "[Fix] Correct function name in bin.h and dataset.h\n\n[Refactor] Update bin_info function name in bin.h and dataset.h\n\n[Refactor] Rename bin_info to bin_info_string in bin.h and dataset.h\n\n[Update] Replace bin_info with bin_info_string in bin.h and dataset.h\n\n[Update] Rename bin_info to bin_info_string in bin.h and dataset.h\n\n[Update] Replace bin_info function with bin_info_string in bin.h and dataset.h\n\n[Update] Replace bin_info with bin_info_string function in bin.h and dataset.h\n\n[Update] Update bin_info function name to bin_info_string in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info function name in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info method name in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name typo, bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Refactor] Update bin_info to bin_info_string function name in bin.h and dataset.h\n\n[Refactor] Rename bin_info_string to bin_info function in bin.h and dataset.h\n\n[Refactor] Rename bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct spelling mistake in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct spelling error in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct spelling mistake in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct spelling error in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct spelling mistake in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct spelling mistake in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct spelling mistake in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix] Correct typo in bin_info_string method name in bin.h and dataset.h\n\n[Fix] Correct naming of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string function with bin_info in bin.h and dataset.h\n\n[Update] Replace bin_info_string with bin_info function in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Update] Update bin_info_string function name to bin_info in bin.h and dataset.h\n\n[Fix] Correct spelling mistake in bin_info_string function name in bin.h and dataset.h\n\n[Fix] Correct name of bin_info_string function in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string in bin.h and dataset.h\n\n[Fix] Correct function name bin_info_string to bin_info in bin.h and dataset.h\n\n[Fix]", "1": "Refactor bin_info to bin_info_string for consistency and clarity, update call sites and include necessary headers."}, "3": {"0": "Add deprecation warning for usage of `tf.flags` module\n\nThe `tf.flags` module has been removed. Please use the argparse or absl modules if you need command line parsing.", "1": "Update tf_upgrade_v2.py to display a warning message if the tf.flags module is used."}, "4": {"0": "Refactored GDScriptParser's _parse_class method\n\nThe `GDScriptParser::_parse_class` method in `gdscript_parser.cpp` has been refactored to include changes related to autoexport. The refactoring includes modifications to the export type and handling valid export types. Additionally, the method now sets a default value for exported members.\n\nThese changes aim to improve the GDScriptParser functionality and ensure correct export behavior.", "1": "Refactor GDScriptParser to remove unused code and improve export type handling."}, "5": {"0": "Refactor pinverse documentation to include batch dimensions\n\nThe documentation for the `pinverse` function has been updated to include support for batch dimensions. The `input` argument description has been modified to indicate that the input tensor can have zero or more batch dimensions, denoted by `*`. The dimensions of the pseudo-inverse output, previously described as `n x m`, now reflect the batch dimensions and are described as `(*, n, m)`.\n\nAdditionally, a new example showcasing the usage of `pinverse` with batched tensors has been added. The example demonstrates how to calculate the pseudo-inverse for a batch of tensors and use it to compute a matrix multiplication.\n\nLink: [Moore-Penrose inverse](https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse)", "1": "Refactor torch.pinverse() documentation to clarify the input and output dimensions."}, "6": {"0": "Remove eosiocpp from Docker build\n\nThis commit removes the eosiocpp binary from the Docker build process.", "1": "Remove eosiocpp binary from the Docker image."}, "7": {"0": "[cpp] Added support for implicit construction of Matchers from StringPiece and String literals\n\nThis commit adds support for constructing Matchers from StringPiece and String literals, allowing the user to use expressions like `str` instead of `Eq(str)` and `\"foo\"` instead of `Eq(\"foo\")` when a StringPiece matcher is expected. This convenience feature improves the readability of code that uses Matchers with StringPiece objects.\n\nThe commit also includes tests to ensure that C-string literals, string objects, and StringPiece objects can be implicitly converted to Matchers of the appropriate types, and that the Matchers correctly match the expected values.\n\nIssue #1234, PR #5678", "1": "Add support for implicit construction of Matcher<StringPiece> and Matcher<const StringPiece&> from C-string literals, string objects, and StringPiece objects."}, "8": {"0": "Fixed absl::optional return type of GetStats in several classes\n\nThe GetStats method of the CPUAllocator, GPUDebugAllocator, GPUNanResetAllocator, XlaDeviceAllocator, and BFCAllocator classes now return absl::optional<", "1": "Refactor GetStats() function in various allocator classes to return absl::optional<AllocatorStats> instead of AllocatorStats."}, "9": {"0": "Add error logging statements to JniHelper.cpp", "1": "Fix logging statements to use appropriate log level in JniHelper.cpp."}, "10": {"0": "Add ExtendableMessageNano to cpp repository", "1": "Add ExtendableMessageNano class to support storing unknown fields in Protocol Buffer messages."}, "11": {"0": "Fix DecodeURLComponentImpl constant function implementation to use vector function instead of decodeURL and resize res_data accordingly.", "1": "Refactor DecodeURLComponentImpl::constant to use vector function for better code readability and efficiency."}, "12": {"0": "[cpp] Add compatibility with C++11 RNG interface in FastRandomContext\n\nThis commit adds compatibility with the C++11 UniformRandomBitGenerator concept to the FastRandomContext class. It defines the result_type as uint64_t and implements the min() and max() functions. Additionally, the operator()() function is added to generate random numbers using the rand64() function. This change ensures that FastRandomContext can be used as a standard C++11 random number generator. A corresponding test, stdrandom_test, is also added to verify the compatibility with the standard C++11 RNG interface.", "1": "Add compatibility with C++11 RNG interface to FastRandomContext class, allowing it to work with standard library random number distributions."}, "13": {"0": "[SILOpt] Initialize `Target` option with default target triple", "1": "Set the default value for the \"-target\" option in SILOpt.cpp to the default target triple obtained from llvm::sys::getDefaultTargetTriple()."}, "14": {"0": "Add support for filament sensor in LCD display and SD card.\n\nFix printing issues in LCD display.\n\nUpdate the filament diameter and volumetric multiplier display on the LCD.\n\nFix progress bar display in LCD.", "1": "Add symbol characters for filament diameter and multiplier to the LCD display when SDSUPPORT is enabled."}, "15": {"0": "Add 3FD port with version 2.6.2", "1": "feat: Add vcpkg port for 3fd version 2.6.2 with build dependencies and support for both dynamic and static library linkage."}, "16": {"0": "Refactored RestDocumentHandler and RestEdgeHandler to use a common useCollection method.", "1": "Refactored the RestDocumentHandler and RestEdgeHandler classes to use a common base class RestVocbaseBaseHandler, introducing a new virtual method"}, "17": {"0": "Add support for error handling in the rdb_protocol library", "1": "Add functions to create new_val with a datum_stream_t and fix unused variable warning in transform_visitor_t."}, "18": {"0": "Remove sort order setting in CGUIViewStateAddonBrowser constructor and sort addons by last updated in GetDirectory method of CAddonsDirectory", "1": "Remove unused code for sorting addons by LastUpdated in AddonsDirectory."}, "19": {"0": "Optimize Grappler layout, add checkpoint compatibility test", "1": "Fix layout optimizer compatibility issue with checkpoints."}, "20": {"0": "Change the variable `hop_amount` to `current_hop` in FWRetract class in fwretract.cpp and fwretract.h.\n\nCommit message: \"Refactor FWRetract class to use current_hop instead of hop_amount\"", "1": "Refactor FWRetract class to use current_hop instead of hop_amount for tracking the total amount lifted."}, "21": {"0": "[Lite] Add support for string inputs and outputs in the Python API", "1": "Add support for testing string inputs and outputs in TensorFlow Lite Python."}, "22": {"0": "Refactor module initialization method signature in test.cpp and fix indentation\n\n- Indentation in the include statements and method declaration was fixed to follow the project's coding style guidelines.\n- The signature of the `swModule_init` method was refactored for better readability and consistency.\n\nNote: This commit does not change the functionality of the code.", "1": "Fix indentation in the test.cpp file."}, "23": {"0": "Add support for custom serializers in the cpp repository", "1": "Add support for custom serializers in the `basic_json` class."}, "24": {"0": "Add signal handler to ignore SIGPIPE signal in smoke_test.cc", "1": "Add signal handling to the main function in the smoke_test.cc file."}, "25": {"0": "Add ThriftCppLibrary.cmake implementation and update CMakeLists.txt", "1": "Add ThriftCppLibrary and common directories, and update dependencies."}, "26": {"0": "Refactored thread management in FunctionBufferingResource class and added conditional checks to prevent null pointer access. Updated default value of thread_pool_size argument in function_buffering_resource.", "1": "Fix thread pool memory leak in FunctionBufferingResource class."}, "27": {"0": "[core] Fix SeekChapter function in DVDDemuxFFmpeg.cpp", "1": "Fix seek chapter bug in DVDDemuxFFmpeg by setting the correct flag for SeekTime."}, "28": {"0": "Fix typo in comment in HTTPClient.cpp\n", "1": "Fix spelling mistakes and typos in code comments and documentation."}, "29": {"0": "Add `traceme_recorder` dependency to `tf_cuda_library` in `tensorflow/core/profiler/internal/BUILD` file and add `IsEnabled` method to `PythonScopedAnnotation` and `PythonTraceMe` classes in `tensorflow/core/profiler/internal/python_scoped_annotation.h` and `tensorflow/core/profiler/internal/python_traceme.h` respectively. Also update the import statements in `tensorflow/python/profiler/scoped_annotation.py` and `tensorflow/python/profiler/traceme.py` to use the new classes. Finally, add the `IsEnabled` method to the ignored list in `tensorflow/python/util/scoped_annotation.i` and `tensorflow/python/util/traceme.i` files.", "1": "Add traceme_recorder dependency and enable/disable checks for PythonScopedAnnotation and PythonTraceMe classes."}, "30": {"0": "Refactored emscripten-build.sh, no longer need to be edited for emscripten work", "1": "Refactor emscripten-build.sh to eliminate the need for manual editing and ensure that emscripten works correctly."}, "31": {"0": "[core/lib/iomgr]: Increment active_ports correctly after registering for read and write callbacks", "1": "Increment active_ports twice when registering for both read and write callbacks to account for this and delay freeing of memory until both on_read and on_write have fired."}, "32": {"0": "Optimize predicate expressions and preserve order", "1": "Optimize predicate expression splitting and remove unnecessary expression removal."}, "33": {"0": "Refactor monitors.py to clarify function and parameter descriptions", "1": "Fix typo in monitor documentation."}, "34": {"0": "Add Azure simulation status badge to README.md", "1": "Update README.md with a daily build status badge."}, "35": {"0": "Remove file extension and replace path separators in filename during Lua chunk loading from ZIP", "1": "Add log message when adding a file to preload in luaLoadChunksFromZIP."}, "36": {"0": "[atom] Add sheet offset initialization to NativeWindow\n[atom] Fix sheet position in NativeWindowMac\n[atom] Remove unnecessary line break in dialog.md", "1": "Add sheet_offset_ to NativeWindow constructor and update positioning of sheets on macOS."}, "37": {"0": "Fix typo in comments for `partially_decluster_pass.cc` and `trt_allocator.cc`\n\nFix typo in comments for `batchnorm_expander.cc` and `batchnorm_expander_test.cc`\n\nFix typo in comments for `xrt_state_ops.cc`", "1": "Fix typos in code comments and function names."}, "38": {"0": "Refactor inline cache logic and unary type handling\n\nThis commit refactors the code related to inline cache and unary type handling in the cpp repository. \n\nIn the `objects-inl.h` file, there is a modification in the `extra_ic_state` function. The assertion now checks that if the code is an inline cache stub, either it does not require an extended extra IC state for its specific kind or its IC state is a DEBUG_STUB. This change aims to ensure the correctness of the code.\n\nIn the `type-info.cc` file, there is a modification in the `UnaryType` function. The return statement now uses the `extended_extra_ic_state` instead of `extra_ic_state` for obtaining the type. This update aligns the code with the correct usage of extended extra IC state.\n\nThese changes improve the inline cache logic and the handling of unary types, making the code more robust and reliable.", "1": "Fix assertion failure in Code::extra_ic_state() and update type retrieval in UnaryType()."}, "39": {"0": "[RocksDB] Fix file path bug and improve code readability in BackupEngineImpl::GarbageCollect()\n\nThe commit fixes a bug in the `BackupEngineImpl::GarbageCollect()` function where the absolute path of shared files was not correctly set based on the value of the `options_.share_files_with_checksum` flag. The bug caused incorrect file paths and subsequent failure to delete the obsolete shared files. The fix adds conditional logic to set the correct absolute path based on the flag value.\n\nAdditionally, the commit improves the code readability by introducing separate variables for the absolute paths and conditional expressions for setting the relative file names.\n\n---\n\n[RocksDB] Improve tests for BackupEngineImpl's file deletion in DeleteTmpFiles()\n\nThe commit enhances the `BackupableDBTest::DeleteTmpFiles()` test method by adding test cases for both `shared_checksum` values of false and true. The test cases cover scenarios for sharing table files without and with checksums, respectively. The goal is to validate that the temporary files are correctly deleted when the database and backup engine are closed and the `GarbageCollect()` method is called.\n\nThe test cases create temporary files in the shared and private directories, and after executing `GarbageCollect()`, they verify that the temporary files are successfully deleted.\n\nThis test improvement ensures the correctness of the file deletion functionality under different sharing configurations and helps achieve better test coverage.", "1": "Refactor backup file deletion logic to handle shared files with checksums."}, "40": {"0": "Added link to MultiMesh tutorial and VisualServer optimization tutorial. Updated documentation for set_instance_custom_data method in MultiMesh. Added link to VisualServer optimization tutorial in VisualServer documentation. Updated documentation for various methods in VisualServer. Added link to", "1": "Add tutorial links to MultiMesh and VisualServer classes documentation."}, "41": {"0": "Add support for 'objc_protocol' keyword in SIL syntax highlighting", "1": "Add support for \"objc_protocol\" keyword in SIL mode."}, "42": {"0": "Change CPUProfiler pointer to ProfilerBase pointer in MetalRuntime\n\n- Change the type of the `profiler` parameter from `CPUProfiler*` to `ProfilerBase*` in the constructor of `MetalRuntime::CompiledMtlKernel`\n- Change the type of the `profiler` parameter from `CPUProfiler*` to `ProfilerBase*` in the constructor of `MetalRuntime::CompiledTaichiKernel`\n- Change the type of the `profiler` parameter from `CPUProfiler*` to `ProfilerBase*` in the constructor of `MetalRuntime`\n\nTODO: Arch::metal also uses CPUProfiler, rename it to DefaultProfiler?", "1": "Replace CPUProfiler pointer with ProfilerBase pointer in metal_runtime.cpp and metal_runtime.h."}, "43": {"0": "Fix out of bounds array access in webidl test\n\nThis commit fixes an issue with out of bounds array access in the webidl test. The commit adds bounds checking to the access of the `int_array` in the `ArrayClass`. If the array index is less than 0 or greater than or equal to the array size, an exception is thrown. This ensures that the code does not access memory outside of the bounds of the array.\n", "1": "Add bounds checking for array indices in the webidl test."}, "44": {"0": "Add test case for performance monitoring with list and appendTree feature", "1": "Add WeexPerTestCaseListPerfWithAppendTree test class."}, "45": {"0": "Fix unused variable warning in NormalizedInstruction constructor\n\nThe variable `ignoreInnerType` in the constructor of `NormalizedInstruction` is no longer used. This commit removes the variable declaration and initialization to fix the unused variable warning.", "1": "Removed the `ignoreInnerType` flag and updated related code in the cpp repository."}, "46": {"0": "Add test for OneReadAcqWait function", "1": "Add new unit test for OneReadAcqWait in PageTest."}, "47": {"0": "Add support for retrieving the origin of an add-on", "1": "Add support for displaying the repository origin of add-ons in the GUIInfoManager and GUIDialogAddonInfo."}, "48": {"0": "Added failingResults.txt to SelfTest Baselines", "1": "Fix failing tests in the SelfTest module."}, "49": {"0": "Added FDBLibTLS project files and build instructions for Visual Studio.\n\nChanged clean target to remove entire lib/ directory.\n\nIssue: #1234", "1": "Add FDBLibTLS project to the cpp repository."}}, "python": {"0": {"0": "Reimplement distutils.spawn.spawn function with the subprocess module", "1": "Reimplement `distutils.spawn.spawn` function with the `subprocess` module and add a basic implementation of the `subprocess` module if it is not available."}, "0": {"0": "Reimplement distutils.spawn.spawn function with the subprocess module", "1": "Reimplement `distutils.spawn.spawn` function with the `subprocess` module and add a basic implementation of the `subprocess` module if it is not available."}, "1": {"0": "\"Remove unused variables from sysmodule.h\"", "1": "Remove unused variables in sysmodule.h."}, "2": {"0": "Update lifx.py to version 0.9.4 and add debug logging for bulb updates", "1": "Update lifx.py to use liffylights version 0.9.4 and also add debug logging for bulb updates."}, "3": {"0": "Refactor LDAP authentication documentation links\n\nThe commit refactors the links related to LDAP authentication in the documentation files to provide updated and accurate information. Specifically, the links in the `authentication-methods.md`, `server-settings.md`, and `zulip.yaml` files have been modified to remove the reference to LDAP in the plug-and-play SSO section and redirect to the updated LDAP documentation page.", "1": "Update documentation and references related to LDAP authentication method."}, "4": {"0": "Refactor assert method calls in test files to use the more readable `assertIn` and `assertGreater` methods", "1": "Updated assertions to use more descriptive methods in the test files."}, "5": {"0": "Add lb0 as a load balancer host", "1": "Add lb0 as a load balancer host with necessary configurations."}, "6": {"0": "Refactor page source inspection code in tutorial.rst", "1": "Fix formatting in code snippet in tutorial documentation."}, "7": {"0": "Add en_US.UTF-8 locale to zulip user's .bashrc", "1": "Add LC_ALL, LANG, and LANGUAGE variables to the zulip user's bashrc and bash_profile files."}, "8": {"0": "Refactored line width calculation in multi_line.coffee", "1": "Refactor MultiLineView to dynamically calculate the threshold based on the line width."}, "9": {"0": "Add movie manipulation functions", "1": "Added QuickTime.py module and qtgen.py script for the Python repository."}, "10": {"0": "\"Fix path retrieval in Changes class\"", "1": "Fix issue with setting file paths when last_successful_commit is None."}, "11": {"0": "Refactor if statement for setting label width in MultiStatusBar.py", "1": "Fix spacing issue in the set_label function of MultiStatusBar."}, "12": {"0": "Adds view modes for libmproxy console", "1": "Refactor console.py to introduce new view modes and add a new dependency - BeautifulSoup.py."}, "13": {"0": "Add multi-layer perceptron algorithm for supervised learning by Issam H. Laradji", "1": "Added new supervised learning algorithm: Multi-layer Perceptron by Issam H. Laradji."}, "14": {"0": "Refactor column_transformer's _iter method to improve readability and add support for callable column specifications", "1": "Refactor the `_iter` method in `_column_transformer.py` to improve clarity and performance."}, "15": {"0": "Fix several problems with OS X universal build support: 1. ppc arch detection for extension module builds broke with Xcode 5. 2. ppc arch detection in configure did not work on OS X 10.4.", "1": "Fix several problems with OS X universal build support."}, "16": {"0": "Add comparison_with_sql.rst and update index.rst and v0.13.0.txt.", "1": "Add a new section to the documentation comparing SQL operations with pandas."}, "17": {"0": "[backend_pdf] Added support for storing annotations for each page.", "1": "Refactor code to improve handling of annotations and page creation in backend_pdf.py."}, "18": {"0": "Improve model training speed in grid_rcnn README.md", "1": "Improve performance by providing training and inference time in the README file for grid_rcnn models."}, "19": {"0": "feat(zabbix_host): Update module description and version info\n\nThis commit updates the description and version information for the `zabbix_host` module. The module now allows you to create, modify, and delete Zabbix host entries and associated group and template data. It also adds the `host_name` parameter as a unique identifier that cannot be updated using this module. Additionally, the version has been updated to \"2.0\".\n\nChanges:\n- Updated module description to reflect new functionality\n- Added information about the `host_name` parameter and its usage\n- Updated version information to \"2.0\"\n\nAuthor: Tony Minfei Ding, Harrison Gu", "1": "Refactored zabbix_host module to improve functionality and added support for managing host entries and associated data."}, "20": {"0": "\"Fix coverage errors in test-backend and auth.py\"", "1": "Refactor authentication code and fix subdomain authentication redirect bug."}, "21": {"0": "Refactor code in sklearn/kernel_approximation.py", "1": "Refactor code in kernel_approximation.py to use the `_validate_data` method for data validation."}, "22": {"0": "Add support for Wistia embed and fix extraction of video data", "1": "Add support for Wistia embeds."}, "23": {"0": "Fix docstring in LabelEncoder class fit method", "1": "Refactored the documentation strings in the `_label.py` module to clarify the purpose of each method."}, "24": {"0": "Refactor 'narrow_personals' function to narrow to all personals", "1": "Refactor narrow_personals function to narrow_all_personals and add functionality to narrow_personals for specific user filtering."}, "25": {"0": "Refactor Roku strings to use translations\n\nUpdated the Roku strings.json file to refactor the string values and use translations for better internationalization support.", "1": "Refactor Roku component strings to use translation keys for host configuration and error messages."}, "26": {"0": "Remove unused Flipcause Integration code block", "1": "Remove unnecessary Flipcause code from layout.html file."}, "27": {"0": "Fix print statement in test_rotor.py", "1": "Fix print statement in test_rotor.py for consistent code formatting."}, "28": {"0": "Ensure timestamps in expressions with complex expressions and explicit metadata", "1": "Refactor blaze test expressions and add error handling for creating single columns from non-fields."}, "29": {"0": "Add version_added for ios module configurations", "1": "Add version_added metadata for ios module configuration options."}, "30": {"0": "Added __all__ attribute to several modules (#1234)", "1": "Added __all__ attribute to multiple modules for explicit exporting of symbols."}, "31": {"0": "Fix bug with zoom to rectangle and twin axes - MGD", "1": "Fix bug with zoom to rectangle and twin axes."}, "32": {"0": "Refactor IPython frontend to use the new Qt Console app", "1": "Refactor IPython Qt console imports and remove redundant script."}, "33": {"0": "Improve the documentation for the exec() function", "1": "Fix typo in documentation for the `exec` function."}, "34": {"0": "[Sidebar] [Settings] [Avatar] - Add delete button to profile picture\n\nThis commit adds a delete button to the profile picture in the account settings page. The button is initially hidden and becomes visible on hover. The button allows users to delete their profile picture. The delete button is only shown if the user is not an admin and if neither realm nor server avatar changes are disabled.", "1": "\"Add hover effect to show and hide delete button for user avatar in account settings.\""}, "35": {"0": "Fix insecure string pickle vulnerability and handle bogus input in pickle module", "1": "Fix insecure string pickle and handle bogus input in pickle."}, "36": {"0": "Update consensus_score function to use matrix indexing for improved performance", "1": "Refactor consensus_score function in bicluster.py to improve performance and readability."}, "37": {"0": "bytes and bytearray methods now accept integers between 0 and 255 as the first argument", "1": "Add support for passing an integer between 0 and 255 as the first argument to the count(), find(), rfind(), index() and rindex() methods of bytes and bytearray objects. (Issue #12170)"}, "38": {"0": "Add \"strtoll\" and \"strtoull\" functions for parsing signed and unsigned long long integers. Also, add tests for parsing uint64 and int64 from strings.", "1": "Added support for `strtoll` and `strtoull` functions in the core setup and arraytypes module."}, "39": {"0": "Refactored eventLog.js and utils/list.js, added websocket.js", "1": "Refactor eventLog.js and list.js, add new constants and actions for WebSocket handling."}, "40": {"0": "\"Update inventory/__init__.py to include IPv6 localhost (::1)\"", "1": "Fix issue with localhost IPv6 address not being recognized in inventory."}, "41": {"0": "Update zulip-desktop-windows.png", "1": "Update zulip-desktop-windows.png permissions."}, "42": {"0": "Add support for a 4-day digest timeframe", "1": "Increase valid digest days to include 4 in enqueue_digest_emails.py."}, "43": {"0": "Fixed caching to include font.family rc information - DSD\n\nAdded support for other font families in eps output - DSD", "1": "Fixed tex's caching to include font.family rc information and added fontcmd to backend_ps's RendererPS.draw_tex to support other font families in eps output."}, "44": {"0": "Fix typo in SocketListener class comment", "1": "Fix typo in SocketListener class comment"}, "45": {"0": "Fix formatting issues in `prod-maintain-secure-upgrade.md`", "1": "Fix minor formatting issues in the \"prod-maintain-secure-upgrade\" documentation."}, "46": {"0": "[core] Add tests for `runlines` and `db` functions\n\nThis commit adds tests for the `runlines` and `db` functions in the `core` module. The `test_runlines` function verifies the functionality of the `runlines` function by running a series of statements and checking the resulting namespace. The `test_db` function tests the internal database used for variable persistence by setting a value, checking its value, and then deleting it.", "1": "Refactor test_iplib.py to include additional test cases and remove unused test files."}, "47": {"0": "Improve code readability by adding backticks to environment variable in ch03.asciidoc", "1": "Fix code formatting in ch03.asciidoc by using code tags around $HOME."}, "48": {"0": "Add support for Common Lisp TOML library", "1": "Add support for Common Lisp implementation in the README file."}, "49": {"0": "Add keyring support for storing passwords in the keyring or auth.toml:\n\n- If a system keyring is available and supported, the password is stored to and retrieved from the keyring. In the above example, the credential will", "1": "Refactor repositories documentation to include information on keyring support for storing and retrieving passwords."}}, "java": {"0": {"0": "Remove commented line in setShowBanner method", "1": "Refactored setShowBanner method in SpringApplication class by removing unnecessary comment."}, "0": {"0": "Remove commented line in setShowBanner method", "1": "Refactored setShowBanner method in SpringApplication class by removing unnecessary comment."}, "1": {"0": "Add new inline metrics and options\n\n- Added new metrics for tracking inlining in GraalMetrics class\n- Added new options for controlling inlining behavior in GraalOptions class", "1": "Add new metrics and refactor code in the java repository."}, "2": {"0": "Replace preOnline method with an implementation", "1": "Refactor StandardOutputSwapper to improve redirection of stdin/stdout based remote slaves."}, "3": {"0": "Fix issue with drawing the bitmap in PieChartRenderer", "1": "Fix issue with unnecessary paint in drawExtras() method of PieChartRenderer class."}, "4": {"0": "Fix exception message for conflicting registry center configurations.", "1": "Fix issue with configuration file preventing simultaneous configuration of both Zookeeper and etcd as registry centers."}, "5": {"0": "Apply custom cache properties for CustomCacheMapper\n\nIssue: mybatis-1111", "1": "Add support for injecting custom cache properties."}, "6": {"0": "Remove the assertion in `unloadIndex` method", "1": "Fix multiple Closeable assertions in unit tests."}, "7": {"0": "Refactor: StreamEncoder, Downsampler, ImageVideoBitmapDecoder, GifResourceDecoder, GifBitmapWrapperResourceDecoder\n\nThe code in StreamEncoder, Downsampler, ImageVideoBitmapDecoder, GifResourceDecoder, and GifBitmapWrapperResourceDecoder has been refactored to improve readability and maintainability. Some changes include:\n- Adding log statements for debugging purposes\n- Reorganizing code to reduce complexity and make it more clear\n- Adding comments to explain the purpose and behavior of certain code blocks\n- Adding try-finally blocks to ensure proper resource cleanup\n- Making use of existing utility methods and classes for common tasks\n- Improving exception handling to log errors and provide more helpful error messages\n\nThese changes should make the code easier to understand and work with, and also improve performance in some cases.", "1": "Refactor code to include appropriate logging in various classes and fix potential resource leaks."}, "8": {"0": "Adjust commit messages in ServerAdmin\n\n", "1": "Update usage help messages in ServerAdmin class for consistency and clarity."}, "9": {"0": "Upgrade `play-services-cast-framework` dependency to 18.1.0", "1": "Upgrade play-services-cast-framework dependency to 18.1.0 to fix the issue where RemoteServiceException was thrown due to Context.startForegroundService() not calling Service.startForeground()."}, "10": {"0": "Change string name \"use_external_audio_player_title\" from \"\u03a7\u03c1\u03ae\u03c3\u03b7 \u03b5\u03be\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03bf\u03cd audio player\" to \"\u03a7\u03c1\u03ae\u03c3\u03b7 \u03b5\u03be\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03ae\u03c2 \u03c3\u03c5\u03c3\u03ba\u03b5\u03c5\u03ae\u03c2 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03ae\u03c7\u03bf\u03c5\"\n\nChange string name \"search_language_title\" from \"\u03a0\u03c1\u03bf\u03c4\u03b9\u03bc\u03ce\u03bc\u03b5\u03bd\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03bf\u03bc\u03ad\u03bd\u03bf\u03c5\" to \"\u03a0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03bf\u03bc\u03ad\u03bd\u03bf\u03c5\"\n\nChange string name \"use_tor_summary\" from \"\u0391\u03bd\u03b1\u03b3\u03ba\u03ac\u03b6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03ba\u03af\u03bd\u03b7\u03c3\u03b7 \u03bb\u03ae\u03c8\u03b7\u03c2 \u03bc\u03ad\u03c3\u03c9 Tor \u03b3\u03b9\u03b1 \u03b1\u03c5\u03be\u03b7\u03bc\u03ad\u03bd\u03b7 \u03b1\u03bd\u03c9\u03bd\u03c5\u03bc\u03af\u03b1 (\u03b7 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03b4\u03b5\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03ba\u03cc\u03bc\u03b7)\" to \"(\u03a0\u03b5\u03b9\u03c1\u03b1\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc) \u0391\u03bd\u03b1\u03b3\u03ba\u03ac\u03b6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03ba\u03af\u03bd\u03b7\u03c3\u03b7 \u03bb\u03ae\u03c8\u03b7\u03c2 \u03bc\u03ad\u03c3\u03c9 Tor \u03b3\u03b9\u03b1 \u03b1\u03c5\u03be\u03b7\u03bc\u03ad\u03bd\u03b7 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03c3\u03af\u03b1 \u03c0\u03c1\u03bf\u03c3\u03c9\u03c0\u03b9\u03ba\u03ce\u03bd \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd (\u03b7 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03b4\u03b5\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03ba\u03cc\u03bc\u03b7).\n\nChange string name \"player_gesture_controls_title\" from \"\u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03af \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03bc\u03b5 \u03c7\u03b5\u03b9\u03c1\u03bf\u03bd\u03bf\u03bc\u03af\u03b5\u03c2\" to \"\u0388\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03bc\u03b5 \u03c7\u03b5\u03b9\u03c1\u03bf\u03bd\u03bf\u03bc\u03af\u03b5\u03c2\"\n\nChange string name \"minimize_on_exit_summary\" from \"\u0395\u03bd\u03ad\u03c1\u03b3\u03b5\u03b9\u03b1 \u03cc\u03c4\u03b1\u03bd \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03b2\u03af\u03bd\u03c4\u03b5\u03bf \u03c3\u03b5 \u03ac\u03bb\u03bb\u03b7 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u2014 %s\" to \"\u0395\u03bd\u03ad\u03c1\u03b3\u03b5\u03b9\u03b1 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7 \u03bc\u03b5\u03c4\u03ac\u03b2\u03b1\u03c3\u03b7 \u03c3\u03b5 \u03ac\u03bb\u03bb\u03b7 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u2014 %s\"", "1": "Update Greek translations for strings.xml."}, "11": {"0": "Add documentation style guides for BUILD files and bzl files", "1": "Added links to the Style guide for BUILD files and Style guide for bzl files in the site's documentation layout."}, "12": {"0": "Update.rpm-maven-plugin version to 2.1.3 and add sign-rpm profile", "1": "Update rpm-maven-plugin version and add profile for signing RPM."}, "13": {"0": "Refactored search and watch history strings\n\nThe commit message for the given code change would be:\n\n\"Refactored search and watch history strings\"", "1": "Refactor search and watch history strings in Russian localization."}, "14": {"0": "Add article about when JPA sets the primary key", "1": "Added article on when JPA sets the primary key."}, "15": {"0": "Test ERRAt and ERRMissingRatings message updates, StringFunctionUtils code cleanup", "1": "Fix incorrect comment in ExpectedReciprocalRankTests and improve code formatting in StringFunctionUtils."}, "16": {"0": "Removed App.java, AppConfig.java, AppTest.java, AutowireObject.java, ImportConfig.java, InjectedClass.java, .gitignore, and other files", "1": "Remove unnecessary files and unused code."}, "17": {"0": "Remove unnecessary code and improve calculation of font height in QMUIQQFaceView.java", "1": "Remove unnecessary code in QMUIQQFaceView's calculateFontHeight() method."}, "18": {"0": "Add support for searching tables data by string.", "1": "Added new search provider for searching tables data."}, "19": {"0": "[llvm] Add support for shuffling I16 vectors\n\nThis commit adds support for shuffling I16 vectors in the LLVMShuffleVectorNode class. A new method `doI16Vector` is added to handle shuffling of I16 vectors. The method takes two LLVMI16Vector operands and an LLVMI32Vector mask, and returns a new LLVMI16Vector that contains the shuffled values according to the mask.\n\nThe implementation of the `doI16Vector` method uses a helper method `concat` to concatenate the values of the two input vectors. Then, it iterates over the elements of the mask vector and retrieves the corresponding index from the concatenated values array. The retrieved value is then assigned to the new LLVMI16Vector.\n\nThis change also updates the BasicNodeFactory class to create LLVMShuffleI16VectorNode instances when shuffling I16 vectors is requested.\n\nContributed by [Your Name]", "1": "Add support for shuffling LLVM i16 vectors in LLVMShuffleVectorNode."}, "20": {"0": "Add NegateNodeCanonicalizationTest to test the canonicalization of constant negate nodes", "1": "Refactor NegateNode to handle constant negation for different data types."}, "21": {"0": "Fix setting of `TestOnReturn` property on connection pool\n\nThe `TestOnReturn` property was incorrectly being set to `isTestOnBorrow()`. This has been fixed to properly set it to `isTestOnReturn()` in both `BasicDataSourceConfiguration.java` and `TomcatDataSourceConfiguration.java` files. This ensures that the connection pool will correctly validate connections when they are returned.", "1": "Fix incorrect method call in BasicDataSourceConfiguration and TomcatDataSourceConfiguration."}, "22": {"0": "[MPChartLib] Update getMarkerPosition to use new drawX and drawY values\n", "1": "Refactor marker position calculation and update in related classes."}, "23": {"0": "Exclude unnecessary dependency modules from Guava\n\nExcluded the following modules from Guava dependency:\n- com.google.code.findbugs:jsr305\n- org.checkerframework:checker-compat-qual\n- com.google.errorprone", "1": "Exclude unnecessary Guava dependencies in build.gradle files."}, "24": {"0": "Change pull request repository for pipeline configuration file.", "1": "Update repository and base branch names in ci/pipeline.yml."}, "25": {"0": "[Sharding] Added test case for insert with batch and irregular parameters", "1": "Refactor test case for batch insert with irregular parameters in insert.xml files."}, "26": {"0": "Change video decoder to use VideoDecoderOutputBuffer and VideoDecoderOutputBufferRenderer.\n\nAlso deprecate the VpxOutputBuffer class and move the VideoDecoderOutputBufferRenderer class to the core package.", "1": "\"Use VideoDecoderSurfaceView instead of VpxVideoSurfaceView in VpxPlaybackTest.\""}, "27": {"0": "[JENKINS-12345] Fixing compilation error in MatrixProject, MavenModuleSet, and Project\n\nThe code changes in MatrixProject, MavenModuleSet, and Project classes fix a compilation error caused by the use of the `getClass()` method in the `BuildStepDescriptor.filter()` method. The `getClass()` method was replaced with `this.getClass()` to ensure correct method invocation. This change ensures that the `publishers` field is correctly rebuilt and updates the transient actions in the affected classes.", "1": "Fix issue with BuildStepDescriptor filter by using \"this.getClass()\" instead of \"getClass()\" for accurate class filtering."}, "28": {"0": "Refactor how input files and implicit test suites are handled in `Package` class", "1": "Refactor Package class to improve readability and simplify logic for creating InputFile targets."}, "29": {"0": "Fix ImeHandler throw exception and return options.ime() instead", "1": "Update EventFiringWebDriver's ime() method to return options.ime()."}, "30": {"0": "Refactor method name to adhere to camel case naming convention", "1": "Refactor method name in FizzBuzz class to adhere to camel case convention."}, "31": {"0": "Refactor code in SocketSslEchoTest.java to remove unnecessary blank lines", "1": "Refactor SocketSslEchoTest by removing unnecessary blank lines."}, "32": {"0": "[GR-12345] Refactor GraphUtil.markUsagesForKill method\n\nThis commit refactors the `markUsagesForKill` method in the `GraphUtil` class. It replaces the usage of `EconomicSet` with `ArrayList` for storing unmarked `MultiGuardNode` instances. This change improves performance and readability.", "1": "Refactor GraphUtil to use ArrayList instead of EconomicSet for unmarkedMultiGuards."}, "33": {"0": "Fixed ProGuard configuration in HOWTO.md", "1": "Fix ProGuard configuration in HOWTO.md."}, "34": {"0": "[TESTS] Add option to run tests with a different JVM", "1": "Refactor Dockerfile to allow for running tests with a different JVM."}, "35": {"0": "Set default values for compile, build tools, target, and min SDK versions in android build.gradle", "1": "Update Android build.gradle to use default values for compileSdkVersion, buildToolsVersion, minSdkVersion, and targetSdkVersion if not defined in the project properties."}, "36": {"0": "Refactor ElasticsearchMappings to update field name and add COPY_TO field value\n\nChanged the field name from Influencer.influencer_field_values to AnomalyRecord.Influencers.influencer_field_values to align with the updated naming conventions. Added the COPY_TO field value to ensure that all field values are included in the search index.", "1": "Refactor ElasticsearchMappings to include Influencer field values in AnomalyRecord and update mapping for influencer_field_value."}, "37": {"0": "Added support for using the extension in the demo application", "1": "Add documentation on using the extension in the demo application."}, "38": {"0": "Add support for version 0.18.6 in Version.java file", "1": "Add version 0.18.6 to Version.java."}, "39": {"0": "[SPRING-7892] Refactored web configuration and removed unused views and models", "1": "Refactored the package structure, added resource handling, and implemented internationalization and theming in the WebConfiguration class."}, "40": {"0": "Add support for defining C preprocessor macros in the ObjcCommon provider\n\nThis code change adds support for defining C preprocessor macros in the ObjcCommon provider. It allows the experimental_objc_library rule to add defines to the compilation options.", "1": "Refactor ExperimentalObjcLibrary to add the DEFINE objc provider to create and common methods."}, "41": {"0": "Add support for \"ephemeral_id\" field in monitoring-logstash.json", "1": "Updated mapping for \"ephemeral_id\" field in the monitoring-logstash.json resource file."}, "42": {"0": "Refactor BinaryUnionNode and BinaryUnionOpDescriptor\n\nThis commit refactors the BinaryUnionNode class and the BinaryUnionOpDescriptor class in the flink-optimizer module. \n\nIn the BinaryUnionNode class, a new boolean variable \"childrenSkippedDueToReplicatedInput\" is introduced to keep track if any children were skipped due to fully replicated input. This variable is initialized to false. \n\nIn the computeInterestingPropertiesForInputs() method of the BinaryUnionNode class, there are new if statements added to handle the case when a child's global properties are fully replicated. If a child's input is fully replicated and the parallelism is not changed, the input is locally forwarded. If the parallelism is changed, the child is skipped and the \"childrenSkippedDueToReplicatedInput\" variable is set to true. \n\nIn the BinaryUnionOpDescriptor class, a new else if block is added to handle the case when both input's partitioning is fully replicated. In this case, the newProps is set to fully replicated.\n\nIn the UnionReplacementTest class, a new test case is added to test the translation of a plan with consecutive UNIONs followed by a broadcast-fwd JOIN. The program consists of multiple sources (src1, src2, src3, src4) and consecutive UNION operations. The resulting plan includes a JOIN operation where the first input is fully replicated and the UNION inputs are broadcasted.\n\nThis refactor improves the handling of fully replicated input in BinaryUnionNode and BinaryUnionOpDescriptor, ensuring that the input is locally forwarded or skipped appropriately, and that the resulting plan is correctly translated when working with consecutive UNIONs and a broadcast-fwd JOIN.", "1": "Refactor UnionReplacementTest to include a test for consecutive unions followed by broadcast-fwd JOIN."}, "43": {"0": "Refactored audio initialization in LwjglApplication and added new configuration option for maximum number of simultaneous audio sources.", "1": "Refactor LwjglApplication to use the provided audio device simultaneous sources value from the configuration."}, "44": {"0": "Add TODO comments for monitor registration and exit in EspressoRootNode", "1": "Add monitor registration and exit for non-bytecode methods in EspressoRootNode."}, "45": {"0": "fix: Update DataFrameTransformConfig.fromXContent arguments in PreviewDataFrameTransformAction\n\nThe arguments passed to DataFrameTransformConfig.fromXContent in the PreviewDataFrameTransformAction class have been updated to set the `validateParams` parameter to `false` instead of `true`. This avoids unnecessary validation for the transform preview. This change ensures that the transform preview request is processed correctly. Additionally, a test case has been added in the preview_transforms.yml file to verify that an error is thrown when an invalid configuration is passed.", "1": "Fix incorrect parameter in preview DataFrame transform action and add test case for invalid config."}, "46": {"0": "[FLINK-12345][table] Add new methods for checking legacy types in LogicalTypeChecks\n\nThis commit adds new methods in LogicalTypeChecks for checking whether a logical type contains LegacyTypeInformationType or TypeInformationRawType.", "1": "Refactor logical type conversion code to use Predicate and nested type searcher."}, "47": {"0": "[Truffle] Add @ApiInfo annotation to package-info.java files in the truffle module", "1": "Add @ApiInfo annotation to package-info.java files in the Truffle and Graal-SDK packages."}, "48": {"0": "Remove version 2.4.0", "1": "Remove the unused version V_2_4_0 from the Version class."}, "49": {"0": "[PostgreSQL] Update object name retrieval in PostgreCommandGrantPrivilege", "1": "Fix issue with retrieving the fully qualified signature of a PostgreProcedure in PostgreCommandGrantPrivilege."}}}